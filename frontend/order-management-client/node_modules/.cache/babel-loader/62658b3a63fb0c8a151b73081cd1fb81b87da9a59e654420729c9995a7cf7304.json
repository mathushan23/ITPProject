{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\my oder mangment\\\\frontend\\\\order-management-client\\\\src\\\\components\\\\CustomerOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [customerName, setCustomerName] = useState('');\n  const [product, setProduct] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [NIC, setNic] = useState('');\n  const [AccountNumber, setAccountNumber] = useState('');\n  const [PhoneNumber, setPhoneNumber] = useState('');\n  const [Address, setAddress] = useState('');\n  const [Email, setEmail] = useState('');\n  const [Amount, setAmount] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [editOrderId, setEditOrderId] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/orders').then(response => {\n      setOrders(response.data); // Directly set orders here\n    }).catch(error => {\n      console.error('Error fetching orders:', error);\n    });\n  }, []);\n  const handleCreateOrder = async () => {\n    // Basic validation to check if required fields are filled\n    if (!customerName || !product || !NIC || !AccountNumber || !PhoneNumber || !Address || !Email || !Amount) {\n      alert('Please fill in all the fields.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5001/api/orders', {\n        customerName,\n        product,\n        quantity,\n        NIC,\n        AccountNumber,\n        PhoneNumber,\n        Address,\n        Email,\n        Amount\n      });\n\n      // Update the state with the newly created order\n      setOrders(prevOrders => [...prevOrders, response.data]);\n\n      // Reset the form after creation\n      setCustomerName('');\n      setProduct('');\n      setQuantity(1);\n      setNic('');\n      setAccountNumber('');\n      setPhoneNumber('');\n      setAddress('');\n      setEmail('');\n      setAmount('');\n    } catch (error) {\n      if (error.response) {\n        console.error('Error Response:', error.response.data);\n        alert(`Error: ${error.response.data.message || 'Failed to create order.'}`);\n      } else {\n        console.error('Error:', error.message);\n        alert('An error occurred while creating the order.');\n      }\n    }\n  };\n  const handleCancelOrder = async id => {\n    try {\n      // Option 1: Remove the order from the state if you want to cancel it\n      await axios.delete(`http://localhost:5001/api/orders/${id}`);\n      setOrders(orders.filter(order => order._id !== id));\n\n      // Option 2: Update the order status to \"Cancelled\"\n      // const response = await axios.put(`http://localhost:5001/api/orders/${id}`, { status: 'Cancelled' });\n      // setOrders(orders.map(order => (order._id === id ? response.data : order)));\n    } catch (error) {\n      console.error('Error cancelling order:', error);\n      alert('Failed to cancel order.');\n    }\n  };\n  const handleEditOrder = order => {\n    setIsEditing(true);\n    setEditOrderId(order._id);\n    setCustomerName(order.customerName);\n    setProduct(order.product);\n    setQuantity(order.quantity);\n    setNic(order.NIC);\n    setAccountNumber(order.AccountNumber);\n    setPhoneNumber(order.PhoneNumber);\n    setAddress(order.Address);\n    setEmail(order.Email);\n    setAmount(order.Amount);\n  };\n  const handleUpdateOrder = async () => {\n    // Validate before submitting\n    if (!customerName || !product || !NIC || !AccountNumber || !PhoneNumber || !Address || !Email || !Amount) {\n      alert('Please fill in all the fields.');\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:5001/api/orders/${editOrderId}`, {\n        customerName,\n        product,\n        quantity,\n        NIC,\n        AccountNumber,\n        PhoneNumber,\n        Address,\n        Email,\n        Amount\n      });\n\n      // Update the state with the modified order\n      const updatedOrders = orders.map(order => order._id === editOrderId ? response.data : order);\n      setOrders(updatedOrders);\n\n      // Reset the form after updating\n      setIsEditing(false);\n      setEditOrderId(null);\n      setCustomerName('');\n      setProduct('');\n      setQuantity(1);\n      setNic('');\n      setAccountNumber('');\n      setPhoneNumber('');\n      setAddress('');\n      setEmail('');\n      setAmount('');\n    } catch (error) {\n      if (error.response) {\n        console.error('Error updating order:', error.response.data);\n        alert(`Failed to update the order: ${error.response.data.message || 'Unknown error'}`);\n      } else {\n        console.error('Error updating order:', error.message);\n        alert('An unexpected error occurred while updating the order.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 31\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"CustomerName:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: customerName,\n        onChange: e => setCustomerName(e.target.value),\n        placeholder: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 127\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: product,\n        onChange: e => setProduct(e.target.value),\n        placeholder: \"Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 115\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantity,\n        min: \"1\",\n        onChange: e => setQuantity(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 113\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateOrder,\n        id: \"updatebtn\",\n        children: \"Update Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        id: \"cancelEditbtn\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateOrder,\n        id: \"cbtn\",\n        children: \"Create Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.customerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.NIC\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.AccountNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.PhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.Address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.Email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.Amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditOrder(order),\n              id: \"editbtn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCancelOrder(order._id),\n              id: \"canclebtn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerOrders, \"Es6acb3GSAs2mGLdWjvP1+u1Zx0=\");\n_c = CustomerOrders;\nexport default CustomerOrders;\nvar _c;\n$RefreshReg$(_c, \"CustomerOrders\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CustomerOrders","_s","orders","setOrders","customerName","setCustomerName","product","setProduct","quantity","setQuantity","NIC","setNic","AccountNumber","setAccountNumber","PhoneNumber","setPhoneNumber","Address","setAddress","Email","setEmail","Amount","setAmount","isEditing","setIsEditing","editOrderId","setEditOrderId","get","then","response","data","catch","error","console","handleCreateOrder","alert","post","prevOrders","message","handleCancelOrder","id","delete","filter","order","_id","handleEditOrder","handleUpdateOrder","put","updatedOrders","map","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","min","Number","onClick","status","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/my oder mangment/frontend/order-management-client/src/components/CustomerOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CustomerOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [product, setProduct] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [NIC, setNic] = useState('');\r\n  const [AccountNumber, setAccountNumber] = useState('');\r\n  const [PhoneNumber, setPhoneNumber] = useState('');\r\n  const [Address, setAddress] = useState('');\r\n  const [Email, setEmail] = useState('');\r\n  const [Amount, setAmount] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editOrderId, setEditOrderId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5001/api/orders')\r\n      .then(response => {\r\n        setOrders(response.data); // Directly set orders here\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching orders:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleCreateOrder = async () => {\r\n    // Basic validation to check if required fields are filled\r\n    if (!customerName || !product || !NIC || !AccountNumber || !PhoneNumber || !Address || !Email || !Amount) {\r\n      alert('Please fill in all the fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/api/orders', {\r\n        customerName,\r\n        product,\r\n        quantity,\r\n        NIC,\r\n        AccountNumber,\r\n        PhoneNumber,\r\n        Address,\r\n        Email,\r\n        Amount,\r\n      });\r\n\r\n      // Update the state with the newly created order\r\n      setOrders(prevOrders => [...prevOrders, response.data]);\r\n\r\n      // Reset the form after creation\r\n      setCustomerName('');\r\n      setProduct('');\r\n      setQuantity(1);\r\n      setNic('');\r\n      setAccountNumber('');\r\n      setPhoneNumber('');\r\n      setAddress('');\r\n      setEmail('');\r\n      setAmount('');\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error('Error Response:', error.response.data);\r\n        alert(`Error: ${error.response.data.message || 'Failed to create order.'}`);\r\n      } else {\r\n        console.error('Error:', error.message);\r\n        alert('An error occurred while creating the order.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelOrder = async (id) => {\r\n    try {\r\n      // Option 1: Remove the order from the state if you want to cancel it\r\n      await axios.delete(`http://localhost:5001/api/orders/${id}`);\r\n      setOrders(orders.filter((order) => order._id !== id));\r\n\r\n      // Option 2: Update the order status to \"Cancelled\"\r\n      // const response = await axios.put(`http://localhost:5001/api/orders/${id}`, { status: 'Cancelled' });\r\n      // setOrders(orders.map(order => (order._id === id ? response.data : order)));\r\n      \r\n    } catch (error) {\r\n      console.error('Error cancelling order:', error);\r\n      alert('Failed to cancel order.');\r\n    }\r\n  };\r\n\r\n  const handleEditOrder = (order) => {\r\n    setIsEditing(true);\r\n    setEditOrderId(order._id);\r\n    setCustomerName(order.customerName);\r\n    setProduct(order.product);\r\n    setQuantity(order.quantity);\r\n    setNic(order.NIC);\r\n    setAccountNumber(order.AccountNumber);\r\n    setPhoneNumber(order.PhoneNumber);\r\n    setAddress(order.Address);\r\n    setEmail(order.Email);\r\n    setAmount(order.Amount);\r\n  };\r\n\r\n  const handleUpdateOrder = async () => {\r\n    // Validate before submitting\r\n    if (!customerName || !product || !NIC || !AccountNumber || !PhoneNumber || !Address || !Email || !Amount) {\r\n      alert('Please fill in all the fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:5001/api/orders/${editOrderId}`, {\r\n        customerName,\r\n        product,\r\n        quantity,\r\n        NIC,\r\n        AccountNumber,\r\n        PhoneNumber,\r\n        Address,\r\n        Email,\r\n        Amount,\r\n      });\r\n\r\n      // Update the state with the modified order\r\n      const updatedOrders = orders.map(order =>\r\n        order._id === editOrderId ? response.data : order\r\n      );\r\n      setOrders(updatedOrders);\r\n\r\n      // Reset the form after updating\r\n      setIsEditing(false);\r\n      setEditOrderId(null);\r\n      setCustomerName('');\r\n      setProduct('');\r\n      setQuantity(1);\r\n      setNic('');\r\n      setAccountNumber('');\r\n      setPhoneNumber('');\r\n      setAddress('');\r\n      setEmail('');\r\n      setAmount('');\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error('Error updating order:', error.response.data);\r\n        alert(`Failed to update the order: ${error.response.data.message || 'Unknown error'}`);\r\n      } else {\r\n        console.error('Error updating order:', error.message);\r\n        alert('An unexpected error occurred while updating the order.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Customer Orders</h1><br />\r\n\r\n      {/* Edit Order Form */}\r\n      {isEditing && (\r\n        <div>\r\n          <h2>Edit Order</h2>\r\n          {/* Inputs for order details */}\r\n          <label>CustomerName:</label><br />\r\n          <input type=\"text\" value={customerName} onChange={(e) => setCustomerName(e.target.value)} placeholder=\"Your Name\" /><br />\r\n          <label>Product:</label><br />\r\n          <input type=\"text\" value={product} onChange={(e) => setProduct(e.target.value)} placeholder=\"Product\" /><br />\r\n          <label>Quantity:</label><br />\r\n          <input type=\"number\" value={quantity} min=\"1\" onChange={(e) => setQuantity(Number(e.target.value))} /><br />\r\n          {/* Remaining inputs for NIC, AccountNumber, etc. */}\r\n          <button onClick={handleUpdateOrder} id=\"updatebtn\">Update Order</button>\r\n          <button onClick={() => setIsEditing(false)} id=\"cancelEditbtn\">Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Create Order Form */}\r\n      {!isEditing && (\r\n        <div>\r\n          <h2>Create Order</h2>\r\n          {/* Inputs for order details */}\r\n          <button onClick={handleCreateOrder} id=\"cbtn\">Create Order</button>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Your Orders</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {/* Table headers */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order) => (\r\n            <tr key={order._id}>\r\n              <td>{order.customerName}</td>\r\n              <td>{order.product}</td>\r\n              <td>{order.quantity}</td>\r\n              <td>{order.NIC}</td>\r\n              <td>{order.AccountNumber}</td>\r\n              <td>{order.PhoneNumber}</td>\r\n              <td>{order.Address}</td>\r\n              <td>{order.Email}</td>\r\n              <td>{order.Amount}</td>\r\n              <td>{order.status}</td>\r\n              <td>\r\n                <button onClick={() => handleEditOrder(order)} id=\"editbtn\">Edit</button>\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleCancelOrder(order._id)} id=\"canclebtn\">Cancel</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}