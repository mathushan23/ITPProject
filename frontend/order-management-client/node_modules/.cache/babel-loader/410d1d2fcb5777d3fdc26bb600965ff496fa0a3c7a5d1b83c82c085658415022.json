{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VITHUSHAN\\\\Desktop\\\\update today project\\\\my last order\\\\frontend\\\\order-management-client\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [userId, setUserId] = useState();\n  const [buttonColor, setButtonColor] = useState(\"initial\");\n  const addToCart = async productId => {\n    try {\n      // Send data to the server to update the cart\n      await axios.post(\"/api/cart\", {\n        productId,\n        userId\n      });\n\n      // Update the button color to green\n      setButtonColor(\"green\");\n\n      // Optionally update the local cart state\n      setCart(prevCart => [...prevCart, {\n        productId,\n        userId\n      }]);\n    } catch (error) {\n      console.error(\"Error adding to cart\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addToCart(\"product123\") // Replace with dynamic productId\n      ,\n      style: {\n        backgroundColor: buttonColor\n      },\n      children: \"Add to Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Product ID: \", item.productId]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"MZxHakrqdcqC9JIIOpAakP+zk1I=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Cart","_s","cart","setCart","userId","setUserId","buttonColor","setButtonColor","addToCart","productId","post","prevCart","error","console","children","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/VITHUSHAN/Desktop/update today project/my last order/frontend/order-management-client/src/components/Cart.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Cart = () => {\r\n  const [cart, setCart] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [buttonColor, setButtonColor] = useState(\"initial\");\r\n\r\n  const addToCart = async (productId) => {\r\n    try {\r\n      // Send data to the server to update the cart\r\n      await axios.post(\"/api/cart\", { productId, userId });\r\n\r\n      // Update the button color to green\r\n      setButtonColor(\"green\");\r\n\r\n      // Optionally update the local cart state\r\n      setCart((prevCart) => [\r\n        ...prevCart,\r\n        { productId, userId }\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error adding to cart\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => addToCart(\"product123\")} // Replace with dynamic productId\r\n        style={{ backgroundColor: buttonColor }}\r\n      >\r\n        Add to Cart\r\n      </button>\r\n\r\n      <div>\r\n        <h3>Cart</h3>\r\n        <ul>\r\n          {cart.map((item, index) => (\r\n            <li key={index}>\r\n              Product ID: {item.productId}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAEzD,MAAMY,SAAS,GAAG,MAAOC,SAAS,IAAK;IACrC,IAAI;MACF;MACA,MAAMZ,KAAK,CAACa,IAAI,CAAC,WAAW,EAAE;QAAED,SAAS;QAAEL;MAAO,CAAC,CAAC;;MAEpD;MACAG,cAAc,CAAC,OAAO,CAAC;;MAEvB;MACAJ,OAAO,CAAEQ,QAAQ,IAAK,CACpB,GAAGA,QAAQ,EACX;QAAEF,SAAS;QAAEL;MAAO,CAAC,CACtB,CAAC;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MACEgB,OAAO,EAAEA,CAAA,KAAMP,SAAS,CAAC,YAAY,CAAE,CAAC;MAAA;MACxCQ,KAAK,EAAE;QAAEC,eAAe,EAAEX;MAAY,CAAE;MAAAQ,QAAA,EACzC;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETtB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbtB,OAAA;QAAAe,QAAA,EACGZ,IAAI,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBzB,OAAA;UAAAe,QAAA,GAAgB,cACF,EAACS,IAAI,CAACd,SAAS;QAAA,GADpBe,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5CID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}